/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package compiladoruami.Final;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Cecy, Lety & Gab
 */
public class COMPILADOR extends javax.swing.JFrame {

    /**
     * Creates new form CompiladorUAMI
     */
    
    UAMI v1;
    String texto;
    boolean arc_seleccionado = false;
    File fteSeleccionado;
    
    public COMPILADOR() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelArchFte = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelArchFte = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        panelArchTpl = new javax.swing.JTextArea();
        labelArchTpl = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnCompilar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        labelArchErr = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        panelArchErr = new javax.swing.JTextArea();
        labelCompilacion = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        panelCompilacion = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        Menu = new javax.swing.JMenu();
        menuAbrir = new javax.swing.JMenuItem();
        menuCréditos = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelArchFte.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelArchFte.setText("Contenido del Archivo Fuente:");

        panelArchFte.setColumns(20);
        panelArchFte.setRows(5);
        jScrollPane1.setViewportView(panelArchFte);

        panelArchTpl.setEditable(false);
        panelArchTpl.setColumns(20);
        panelArchTpl.setRows(5);
        jScrollPane2.setViewportView(panelArchTpl);

        labelArchTpl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelArchTpl.setText("Contenido del Archivo Tupla:");

        btnGuardar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCompilar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCompilar.setText("Compilar");
        btnCompilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompilarActionPerformed(evt);
            }
        });

        btnLimpiar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnSalir.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        labelArchErr.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelArchErr.setText("Contenido del Archivo Error:");

        panelArchErr.setEditable(false);
        panelArchErr.setColumns(20);
        panelArchErr.setRows(5);
        jScrollPane4.setViewportView(panelArchErr);

        labelCompilacion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelCompilacion.setText("Resultado del Proceso de Compilación:");

        panelCompilacion.setEditable(false);
        panelCompilacion.setColumns(20);
        panelCompilacion.setRows(5);
        jScrollPane3.setViewportView(panelCompilacion);

        Menu.setText("Archivo");

        menuAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        menuAbrir.setText("Abrir");
        menuAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAbrirActionPerformed(evt);
            }
        });
        Menu.add(menuAbrir);

        menuCréditos.setText("Créditos");
        menuCréditos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCréditosActionPerformed(evt);
            }
        });
        Menu.add(menuCréditos);
        Menu.add(jSeparator1);

        menuSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        menuSalir.setText("Salir");
        menuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSalirActionPerformed(evt);
            }
        });
        Menu.add(menuSalir);

        jMenuBar1.add(Menu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelCompilacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelArchErr, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(366, 366, 366)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(btnCompilar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(labelArchFte)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(labelArchTpl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(174, 174, 174))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(15, Short.MAX_VALUE)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(282, 282, 282)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCompilar)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCompilacion)
                    .addComponent(labelArchErr))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap(9, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelArchFte)
                        .addComponent(labelArchTpl))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                        .addComponent(jScrollPane2))
                    .addContainerGap(326, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAbrirActionPerformed
        String archivo = abrirArchivo();
        if (texto != "") {
            limpiarVentana();
            panelArchFte.setText(archivo);
        }
    }//GEN-LAST:event_menuAbrirActionPerformed

    private void menuCréditosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCréditosActionPerformed
        JOptionPane.showMessageDialog(null, "Hecho por:\nZempoalteca Garrido Gabriel - Mat: 210311073"
                + "\nSandoval Meza Leticia - Mat: 210344107 \nJimenez Martinez Cecilia - Mat:210309432"); 
    }//GEN-LAST:event_menuCréditosActionPerformed

    private void menuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuSalirActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (arc_seleccionado) {
            try {
                if (fteSeleccionado.exists()) {
                    String codigo = panelArchFte.getText();
                    String ruta = fteSeleccionado.getAbsolutePath();
                    fteSeleccionado.delete();
                    fteSeleccionado = new File(ruta);
                    BufferedWriter bw = new BufferedWriter(new FileWriter(fteSeleccionado));
                    bw.write(codigo);
                    bw.close();
                } else {
                    String codigo = panelArchFte.getText();
                    String ruta = fteSeleccionado.getAbsolutePath();
                    fteSeleccionado = new File(ruta);
                    BufferedWriter bw = new BufferedWriter(new FileWriter(fteSeleccionado));
                    bw.write(codigo);
                    bw.close();
                }
                panelArchTpl.setText("");
                panelCompilacion.setText("");
                panelArchErr.setText("");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "No se pudo guardar el archivo, error: " + e);
            }
        } else {
            creaArchivo();
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCompilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompilarActionPerformed
        compila();
    }//GEN-LAST:event_btnCompilarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        arc_seleccionado = false;
        limpiarVentana();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    
        private void creaArchivo() {
        try {
            JFileChooser file = new JFileChooser();
            file.showSaveDialog(this);
            File guarda = file.getSelectedFile();
            if (guarda != null) {
                String ruta = guarda + ".fte";
                FileWriter save = new FileWriter(ruta);
                save.write(panelArchFte.getText());
                save.close();
                JOptionPane.showMessageDialog(null, "El archivo se ha guardado exitosamente!", "Información", JOptionPane.INFORMATION_MESSAGE);
                arc_seleccionado = true;
                fteSeleccionado = new File(ruta);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Su archivo no se ha guardado!", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void limpiarVentana() {
        panelArchErr.setText("");
        panelArchFte.setText("");
        panelArchTpl.setText("");
        panelCompilacion.setText("");
    }

    private String abrirArchivo() {
        int opcion;
        String aux;
        texto = "";
        try {
            JFileChooser archivo = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Solo archivos *.fte :D", "fte");
            archivo.setFileFilter(filter);
            opcion = archivo.showOpenDialog(null);
            if (opcion == JFileChooser.APPROVE_OPTION) {
                fteSeleccionado = archivo.getSelectedFile();
                FileReader archivos = new FileReader(fteSeleccionado);
                BufferedReader lee = new BufferedReader(archivos);
                while ((aux = lee.readLine()) != null) {
                    texto += aux + "\n";
                }
                lee.close();
                arc_seleccionado = true;
            }
            if (opcion == 1) {
                texto = "";
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al leer el archivo *.fte!");
        }
        return texto;
    }

    private void compila() {
        try {
            if (arc_seleccionado) {
                String ruta = fteSeleccionado.getAbsolutePath();
                //System.out.println(ruta);
                String rutaSinExt = ruta.substring(0, ruta.length() - 4);
                panelCompilacion.setText("");
                v1 = new UAMI();
                v1.compilador(ruta, panelCompilacion);
                //System.out.println("LLego hasta aca");
                panelArchTpl.setText(setCompilation(rutaSinExt + ".tpl"));
                panelArchErr.setText(setCompilation(rutaSinExt + ".err"));
            } else {
                JOptionPane.showMessageDialog(null, "Seleccione un código fuente a compilar!");
                String archivo = abrirArchivo();
                if (texto != "") {
                    limpiarVentana();
                    panelArchFte.setText(archivo);
                }
            }
        } catch (Exception ev) {
            JOptionPane.showMessageDialog(null, "Error al seleccionar el archivo *.fte, error: " + ev);
        }
    }
    
        private String setCompilation(String rutaArch) {
        String aux;
        String tupla = "";
        FileReader archivos;
        try {
            archivos = new FileReader(rutaArch);
            BufferedReader lee = new BufferedReader(archivos);
            while ((aux = lee.readLine()) != null) {
                tupla += aux + "\n";
            }
            lee.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No se encontro el archivo *.tpl" + e);
        }
        return tupla;
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(COMPILADOR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(COMPILADOR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(COMPILADOR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(COMPILADOR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new COMPILADOR().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Menu;
    private javax.swing.JButton btnCompilar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel labelArchErr;
    private javax.swing.JLabel labelArchFte;
    private javax.swing.JLabel labelArchTpl;
    private javax.swing.JLabel labelCompilacion;
    private javax.swing.JMenuItem menuAbrir;
    private javax.swing.JMenuItem menuCréditos;
    private javax.swing.JMenuItem menuSalir;
    private javax.swing.JTextArea panelArchErr;
    private javax.swing.JTextArea panelArchFte;
    private javax.swing.JTextArea panelArchTpl;
    private javax.swing.JTextArea panelCompilacion;
    // End of variables declaration//GEN-END:variables
}
